


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Leaflet.markercluster/dist/leaflet.markercluster.js at master · Leaflet/Leaflet.markercluster · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="fe17.rs.github.com">
    <meta name="ruby" content="ruby 1.9.3p194-tcs-github-tcmalloc (2012-05-25, TCS patched 2012-05-27, GitHub v1.0.34) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="xhr-socket" href="/_sockets" />
    
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="T1bjvHnEZaRZRifT5v6S6oygQn+3theGavP0CvTLofg=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-00c0e7652fb6f0fde282f6efba767cc4127f7149.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-599048231308405a57ed982f74ba5e249891263a.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://github.global.ssl.fastly.net/assets/frameworks-f86a2975a82dceee28e5afe598d1ebbfd7109d79.js" type="text/javascript"></script>
      <script src="https://github.global.ssl.fastly.net/assets/github-b4c56179d3cda11abae549aff4f74e9c470520e5.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="3f7f684542b2c6dd622c2372e107a6de">

        <link data-pjax-transient rel='permalink' href='/Leaflet/Leaflet.markercluster/blob/ac3e7d4fea9d1213d04e53140a8379753b3091d5/dist/leaflet.markercluster.js'>
  <meta property="og:title" content="Leaflet.markercluster"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/Leaflet/Leaflet.markercluster"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="Leaflet.markercluster - Marker Clustering plugin for Leaflet"/>

  <meta name="description" content="Leaflet.markercluster - Marker Clustering plugin for Leaflet" />

  <meta content="2854298" name="octolytics-dimension-user_id" /><meta content="Leaflet" name="octolytics-dimension-user_login" /><meta content="4983184" name="octolytics-dimension-repository_id" /><meta content="Leaflet/Leaflet.markercluster" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="4983184" name="octolytics-dimension-repository_network_root_id" /><meta content="Leaflet/Leaflet.markercluster" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/Leaflet/Leaflet.markercluster/commits/master.atom" rel="alternate" title="Recent Commits to Leaflet.markercluster:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob  vis-public env-production ">

    <div class="wrapper">
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/signup">Sign up</a>
      <a class="button" href="/login?return_to=%2FLeaflet%2FLeaflet.markercluster%2Fblob%2Fmaster%2Fdist%2Fleaflet.markercluster.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">


      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="Leaflet/Leaflet.markercluster"
      data-branch="master"
      data-sha="956049dcca90044702061971a3e6cb82ba89d324"
  >

    <input type="hidden" name="nwo" value="Leaflet/Leaflet.markercluster" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>


      


          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
  <a href="/login?return_to=%2FLeaflet%2FLeaflet.markercluster"
  class="minibutton with-count js-toggler-target star-button entice tooltipped upwards"
  title="You must be signed in to use this feature" rel="nofollow">
  <span class="octicon octicon-star"></span>Star
</a>
<a class="social-count js-social-count" href="/Leaflet/Leaflet.markercluster/stargazers">
  446
</a>

  </li>

    <li>
      <a href="/login?return_to=%2FLeaflet%2FLeaflet.markercluster"
        class="minibutton with-count js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/Leaflet/Leaflet.markercluster/network" class="social-count">
        125
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/Leaflet" class="url fn" itemprop="url" rel="author"><span itemprop="title">Leaflet</span></a></span
          ><span class="repohead-name-divider">/</span><strong
          ><a href="/Leaflet/Leaflet.markercluster" class="js-current-repository js-repo-home-link">Leaflet.markercluster</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">

      <div class="repository-with-sidebar repo-container ">

        <div class="repository-sidebar">
            

<div class="repo-nav repo-nav-full js-repository-container-pjax js-octicon-loaders">
  <div class="repo-nav-contents">
    <ul class="repo-menu">
      <li class="tooltipped leftwards" title="Code">
        <a href="/Leaflet/Leaflet.markercluster" aria-label="Code" class="js-selected-navigation-item selected" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /Leaflet/Leaflet.markercluster">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/Leaflet/Leaflet.markercluster/issues" aria-label="Issues" class="js-selected-navigation-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /Leaflet/Leaflet.markercluster/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>32</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests"><a href="/Leaflet/Leaflet.markercluster/pulls" aria-label="Pull Requests" class="js-selected-navigation-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /Leaflet/Leaflet.markercluster/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>2</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="repo-menu-separator"></div>
    <ul class="repo-menu">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/Leaflet/Leaflet.markercluster/pulse" aria-label="Pulse" class="js-selected-navigation-item " data-pjax="true" data-selected-links="pulse /Leaflet/Leaflet.markercluster/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/Leaflet/Leaflet.markercluster/graphs" aria-label="Graphs" class="js-selected-navigation-item " data-pjax="true" data-selected-links="repo_graphs repo_contributors /Leaflet/Leaflet.markercluster/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/Leaflet/Leaflet.markercluster/network" aria-label="Network" class="js-selected-navigation-item js-disable-pjax" data-selected-links="repo_network /Leaflet/Leaflet.markercluster/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>

  <input type="text" class="clone js-url-field"
         value="https://github.com/Leaflet/Leaflet.markercluster.git" readonly="readonly">

  <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/Leaflet/Leaflet.markercluster.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>

  <input type="text" class="clone js-url-field"
         value="https://github.com/Leaflet/Leaflet.markercluster" readonly="readonly">

  <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/Leaflet/Leaflet.markercluster" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
</div>



<p class="clone-options">You can clone with
    <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
    <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>,
  and <a href="https://help.github.com/articles/which-remote-url-should-i-use">other methods.</a>
</p>



                <a href="/Leaflet/Leaflet.markercluster/archive/master.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:05ffe61dbde0dc7e96b2c9a339f711f5 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:05ffe61dbde0dc7e96b2c9a339f711f5 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/Leaflet/Leaflet.markercluster/find/master" data-pjax data-hotkey="t" style="display:none">Show File Finder</a>

<div class="file-navigation">
  


<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master" role="button" aria-label="Switch branches or tags">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/Leaflet/Leaflet.markercluster/blob/gh-pages/dist/leaflet.markercluster.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="gh-pages" data-skip-pjax="true" rel="nofollow" title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/Leaflet/Leaflet.markercluster/blob/master/dist/leaflet.markercluster.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" data-skip-pjax="true" rel="nofollow" title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/Leaflet/Leaflet.markercluster/tree/0.2/dist/leaflet.markercluster.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.2" data-skip-pjax="true" rel="nofollow" title="0.2">0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/Leaflet/Leaflet.markercluster/tree/0.1/dist/leaflet.markercluster.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="0.1" data-skip-pjax="true" rel="nofollow" title="0.1">0.1</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/Leaflet/Leaflet.markercluster" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">Leaflet.markercluster</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/Leaflet/Leaflet.markercluster/tree/master/dist" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator"> / </span><strong class="final-path">leaflet.markercluster.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="dist/leaflet.markercluster.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://1.gravatar.com/avatar/798717b399b786a8fa7d1a94db8dc0a2?d=https%3A%2F%2Fidenticons.github.com%2F136ef668680eba01a9206b2a2c55c69a.png&amp;s=140" width="24" />
    <span class="author"><a href="/danzel" rel="author">danzel</a></span>
    <time class="js-relative-date" datetime="2013-08-25T20:39:46-07:00" title="2013-08-25 20:39:46">August 25, 2013</time>
    <div class="commit-title">
        <a href="/Leaflet/Leaflet.markercluster/commit/ac3e7d4fea9d1213d04e53140a8379753b3091d5" class="message" data-pjax="true" title="update build">update build</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li class="facebox-user-list-item">
          <img height="24" src="https://1.gravatar.com/avatar/798717b399b786a8fa7d1a94db8dc0a2?d=https%3A%2F%2Fidenticons.github.com%2F136ef668680eba01a9206b2a2c55c69a.png&amp;s=140" width="24" />
          <a href="/danzel">danzel</a>
        </li>
      </ul>
    </div>
  </div>


<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>6 lines (6 sloc)</span>
        <span>27.327 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
              <a class="minibutton disabled js-entice" href=""
                 data-entice="You must be signed in to make or propose changes">Edit</a>
          <a href="/Leaflet/Leaflet.markercluster/raw/master/dist/leaflet.markercluster.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/Leaflet/Leaflet.markercluster/blame/master/dist/leaflet.markercluster.js" class="button minibutton ">Blame</a>
          <a href="/Leaflet/Leaflet.markercluster/commits/master/dist/leaflet.markercluster.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
            <a class="minibutton danger empty-icon js-entice" href=""
               data-entice="You must be signed in and on a branch to make or propose changes">
            Delete
          </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>

            </td>
            <td class="blob-line-code">
                    <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> Leaflet.markercluster, Provides Beautiful Animated Marker Clustering functionality for Leaflet, a JS library for interactive maps.</span></div><div class='line' id='LC3'><span class="cm"> https://github.com/Leaflet/Leaflet.markercluster</span></div><div class='line' id='LC4'><span class="cm"> (c) 2012-2013, Dave Leaver, smartrak</span></div><div class='line' id='LC5'><span class="cm">*/</span></div><div class='line' id='LC6'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">MarkerClusterGroup</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">FeatureGroup</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">maxClusterRadius</span><span class="o">:</span><span class="mi">80</span><span class="p">,</span><span class="nx">iconCreateFunction</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">spiderfyOnMaxZoom</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">showCoverageOnHover</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">zoomToBoundsOnClick</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">singleMarkerMode</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">disableClusteringAtZoom</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">removeOutsideVisibleBounds</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">animateAddingMarkers</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">spiderfyDistanceMultiplier</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">polygonOptions</span><span class="o">:</span><span class="p">{}},</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">Util</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">iconCreateFunction</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">iconCreateFunction</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_defaultIconCreateFunction</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">featureGroup</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">FeatureGroup</span><span class="p">.</span><span class="nx">EVENTS</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_propagateEvent</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">featureGroup</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">FeatureGroup</span><span class="p">.</span><span class="nx">EVENTS</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_propagateEvent</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsRemoving</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">addLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LayerGroup</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">t</span><span class="p">.</span><span class="nx">_layers</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_layers</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">addLayers</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hasLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_addLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_maxZoom</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">getZoom</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">n</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">&gt;=</span><span class="nx">s</span><span class="p">;)</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">__parent</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animateAddingMarkers</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationAddLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationAddLayerNonAnimated</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">removeLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LayerGroup</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">t</span><span class="p">.</span><span class="nx">_layers</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_layers</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">removeLayers</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">getLatLng</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">hasLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="o">:</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_arraySplice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">,</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">hasLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsRemoving</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">)},</span><span class="nx">addLayers</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">hasLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_addLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_maxZoom</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">__parent</span><span class="o">&amp;&amp;</span><span class="mi">2</span><span class="o">===</span><span class="nx">n</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">getChildCount</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">getAllChildMarkers</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">n</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">h</span><span class="p">)}}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="k">else</span> <span class="nx">o</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">eachLayer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">_iconNeedsUpdate</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">_updateIcon</span><span class="p">()}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">removeLayers</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_arraySplice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">__parent</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">hasLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">)))</span><span class="o">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">eachLayer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">_updateIcon</span><span class="p">()}),</span><span class="k">this</span><span class="p">},</span><span class="nx">clearLayers</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="o">=</span><span class="p">[],</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_gridClusters</span><span class="p">,</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_gridUnclustered</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_noanimationUnspiderfy</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_noanimationUnspiderfy</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">clearLayers</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">clearLayers</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">eachLayer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">delete</span> <span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_generateInitialClusters</span><span class="p">(),</span><span class="k">this</span><span class="p">},</span><span class="nx">getBounds</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLngBounds</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getLatLng</span><span class="p">());</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">getBounds</span><span class="p">();</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">isValid</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="p">},</span><span class="nx">eachLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">getAllChildMarkers</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">eachLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">hasLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsRemoving</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_group</span><span class="o">!==</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">hasLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">zoomToShowLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">((</span><span class="nx">t</span><span class="p">.</span><span class="nx">_icon</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_icon</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;moveend&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;animationend&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">_icon</span><span class="p">)</span><span class="nx">e</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_icon</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;spiderfied&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="p">()};</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;spiderfied&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">spiderfy</span><span class="p">()}};</span><span class="nx">t</span><span class="p">.</span><span class="nx">_icon</span><span class="o">?</span><span class="nx">e</span><span class="p">()</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">getZoom</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;moveend&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">_icon</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">panTo</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">()))</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;moveend&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;animationend&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">setView</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">zoomToBounds</span><span class="p">())},</span><span class="nx">onAdd</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">isFinite</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">getMaxZoom</span><span class="p">()))</span><span class="k">throw</span><span class="s2">&quot;Map has no maxZoom specified&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">onAdd</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">onAdd</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridClusters</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_generateInitialClusters</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsRemoving</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsRemoving</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsRemoving</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">getLatLng</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">__parent</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_addLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_maxZoom</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_needsClustering</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;zoomend&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomEnd</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;moveend&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_moveEnd</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfierOnAdd</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfierOnAdd</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_bindEvents</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">getZoom</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">)},</span><span class="nx">onRemove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;zoomend&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomEnd</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;moveend&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_moveEnd</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_unbindEvents</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_mapPane</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_mapPane</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot; leaflet-cluster-anim&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfierOnRemove</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfierOnRemove</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">onRemove</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_nonPointGroup</span><span class="p">.</span><span class="nx">onRemove</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">clearLayers</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">getVisibleParent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">_icon</span><span class="p">;)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">__parent</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">_arraySplice</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">_removeLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridClusters</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridUnclustered</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_maxZoom</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">removeObject</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">project</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">a</span><span class="p">));</span><span class="nx">a</span><span class="o">--</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">_</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">_markers</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_arraySplice</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span><span class="nx">_</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">_childCount</span><span class="o">--</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">));)</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">_</span><span class="p">.</span><span class="nx">_childCount</span><span class="o">&lt;=</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="o">?</span><span class="nx">_</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">_</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="p">[</span><span class="nx">_</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">].</span><span class="nx">removeObject</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">project</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">_cLatLng</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">)),</span><span class="nx">s</span><span class="p">[</span><span class="nx">_</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">].</span><span class="nx">addObject</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">project</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">_</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_arraySplice</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">,</span><span class="nx">_</span><span class="p">),</span><span class="nx">_</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_markers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">__parent</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">__parent</span><span class="p">,</span><span class="nx">_</span><span class="p">.</span><span class="nx">_icon</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">_</span><span class="p">),</span><span class="nx">i</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">h</span><span class="p">)))</span><span class="o">:</span><span class="p">(</span><span class="nx">_</span><span class="p">.</span><span class="nx">_recalculateBounds</span><span class="p">(),</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">_</span><span class="p">.</span><span class="nx">_icon</span><span class="o">||</span><span class="nx">_</span><span class="p">.</span><span class="nx">_updateIcon</span><span class="p">()),</span><span class="nx">_</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">__parent</span><span class="p">;</span><span class="k">delete</span> <span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="p">},</span><span class="nx">_propagateEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">layer</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;cluster&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">_defaultIconCreateFunction</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getChildCount</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot; marker-cluster-&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="o">+=</span><span class="mi">10</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;small&quot;</span><span class="o">:</span><span class="mi">100</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;medium&quot;</span><span class="o">:</span><span class="s2">&quot;large&quot;</span><span class="p">,</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">DivIcon</span><span class="p">({</span><span class="nx">html</span><span class="o">:</span><span class="s2">&quot;&lt;div&gt;&lt;span&gt;&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&lt;/div&gt;&quot;</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;marker-cluster&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">iconSize</span><span class="o">:</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">Point</span><span class="p">(</span><span class="mi">40</span><span class="p">,</span><span class="mi">40</span><span class="p">)})},</span><span class="nx">_bindEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">spiderfyOnMaxZoom</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showCoverageOnHover</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">zoomToBoundsOnClick</span><span class="p">;(</span><span class="nx">e</span><span class="o">||</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;clusterclick&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomOrSpiderfy</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;clustermouseover&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_showCoverage</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;clustermouseout&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_hideCoverage</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;zoomend&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_hideCoverage</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;layerremove&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_hideCoverageOnRemove</span><span class="p">,</span><span class="k">this</span><span class="p">))},</span><span class="nx">_zoomOrSpiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">getMaxZoom</span><span class="p">()</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">getZoom</span><span class="p">()</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">spiderfyOnMaxZoom</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">layer</span><span class="p">.</span><span class="nx">spiderfy</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">zoomToBoundsOnClick</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">layer</span><span class="p">.</span><span class="nx">zoomToBounds</span><span class="p">()},</span><span class="nx">_showCoverage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_shownPolygon</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_shownPolygon</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">layer</span><span class="p">.</span><span class="nx">getChildCount</span><span class="p">()</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">layer</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_shownPolygon</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">Polygon</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">layer</span><span class="p">.</span><span class="nx">getConvexHull</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">polygonOptions</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_shownPolygon</span><span class="p">)))},</span><span class="nx">_hideCoverage</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_shownPolygon</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_shownPolygon</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_shownPolygon</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">_hideCoverageOnRemove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">layer</span><span class="o">===</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_hideCoverage</span><span class="p">()},</span><span class="nx">_unbindEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">spiderfyOnMaxZoom</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">showCoverageOnHover</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">zoomToBoundsOnClick</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">;(</span><span class="nx">t</span><span class="o">||</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;clusterclick&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoomOrSpiderfy</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;clustermouseover&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_showCoverage</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;clustermouseout&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_hideCoverage</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;zoomend&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_hideCoverage</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;layerremove&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_hideCoverageOnRemove</span><span class="p">,</span><span class="k">this</span><span class="p">))},</span><span class="nx">_zoomEnd</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_mergeSplitClusters</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">())},</span><span class="nx">_moveEnd</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="o">=</span><span class="nx">t</span><span class="p">}},</span><span class="nx">_generateInitialClusters</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">getMaxZoom</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">maxClusterRadius</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">disableClusteringAtZoom</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">disableClusteringAtZoom</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_maxZoom</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridClusters</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridUnclustered</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridClusters</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">DistanceGrid</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridUnclustered</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">DistanceGrid</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">_addLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridClusters</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_gridUnclustered</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">singleMarkerMode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">icon</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">iconCreateFunction</span><span class="p">({</span><span class="nx">getChildCount</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">1</span><span class="p">},</span><span class="nx">getAllChildMarkers</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">[</span><span class="nx">t</span><span class="p">]}}));</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">project</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getNearObject</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">_addChild</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getNearObject</span><span class="p">(</span><span class="nx">i</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">__parent</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_removeLayer</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span><span class="nx">s</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">addObject</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">project</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">_cLatLng</span><span class="p">,</span><span class="nx">e</span><span class="p">)),</span><span class="nx">o</span><span class="p">.</span><span class="nx">__parent</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">;</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="nx">_</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">_</span><span class="p">),</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">addObject</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">project</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">n</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_addChild</span><span class="p">(</span><span class="nx">_</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">removeObject</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">project</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">n</span><span class="p">));</span><span class="nx">n</span><span class="o">--</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">addObject</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_addChild</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">},</span><span class="nx">_mergeSplitClusters</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationStart</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">()),</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationZoomIn</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationStart</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationZoomOut</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_moveEnd</span><span class="p">()},</span><span class="nx">_getExpandedVisibleBounds</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">removeOutsideVisibleBounds</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getBounds</span><span class="p">();</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getBounds</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_southWest</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_northEast</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Browser</span><span class="p">.</span><span class="nx">mobile</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">lat</span><span class="o">-</span><span class="nx">n</span><span class="p">.</span><span class="nx">lat</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Browser</span><span class="p">.</span><span class="nx">mobile</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">lng</span><span class="o">-</span><span class="nx">n</span><span class="p">.</span><span class="nx">lng</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLngBounds</span><span class="p">(</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">lat</span><span class="o">-</span><span class="nx">s</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">lng</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">lat</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">lng</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))},</span><span class="nx">_animationAddLayerNonAnimated</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">2</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">_addToMap</span><span class="p">();</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAllChildMarkers</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])}</span><span class="k">else</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_updateIcon</span><span class="p">()}}),</span><span class="nx">L</span><span class="p">.</span><span class="nx">MarkerClusterGroup</span><span class="p">.</span><span class="nx">include</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">DomUtil</span><span class="p">.</span><span class="nx">TRANSITION</span><span class="o">?</span><span class="p">{</span><span class="nx">_animationStart</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_mapPane</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; leaflet-cluster-anim&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="o">++</span><span class="p">},</span><span class="nx">_animationEnd</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_mapPane</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_mapPane</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot; leaflet-cluster-anim&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="o">--</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;animationend&quot;</span><span class="p">)},</span><span class="nx">_animationZoomIn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">(),</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">_markers</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_isSingleParent</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">)),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">)</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">o</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_forceLayout</span><span class="p">(),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyBecomeVisible</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">eachLayer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="o">||!</span><span class="nx">t</span><span class="p">.</span><span class="nx">_icon</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">_recursivelyRestoreChildPositions</span><span class="p">(</span><span class="nx">e</span><span class="p">)}),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_animationEnd</span><span class="p">()},</span><span class="mi">200</span><span class="p">)},</span><span class="nx">_animationZoomOut</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationZoomOutSingle</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">,</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">()),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">())},</span><span class="nx">_animationZoomOutSingle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">_recursivelyAnimateChildrenInAndAddSelfToMap</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_forceLayout</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">_recursivelyBecomeVisible</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">t</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">r</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">()),</span><span class="nx">r</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">)}</span><span class="k">else</span> <span class="nx">t</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">)});</span><span class="nx">s</span><span class="p">.</span><span class="nx">_animationEnd</span><span class="p">()},</span><span class="mi">200</span><span class="p">)},</span><span class="nx">_animationAddLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">e</span><span class="o">!==</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_childCount</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_updateIcon</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_forceLayout</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationStart</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">_setPos</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">latLngToLayerPoint</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">())),</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">_animationEnd</span><span class="p">()},</span><span class="mi">200</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_forceLayout</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">_animationStart</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">_animationZoomOutSingle</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">getMaxZoom</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">getZoom</span><span class="p">())))},</span><span class="nx">_forceLayout</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">L</span><span class="p">.</span><span class="nx">Util</span><span class="p">.</span><span class="nx">falseFn</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">)}}</span><span class="o">:</span><span class="p">{</span><span class="nx">_animationStart</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">_animationZoomIn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">())},</span><span class="nx">_animationZoomOut</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_currentShownBounds</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_topClusterLevel</span><span class="p">.</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getExpandedVisibleBounds</span><span class="p">())},</span><span class="nx">_animationAddLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationAddLayerNonAnimated</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}),</span><span class="nx">L</span><span class="p">.</span><span class="nx">markerClusterGroup</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerClusterGroup</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Marker</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">Marker</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">initialize</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">_cLatLng</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">()</span><span class="o">:</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),{</span><span class="nx">icon</span><span class="o">:</span><span class="k">this</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_markers</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_iconNeedsUpdate</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_bounds</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLngBounds</span><span class="p">,</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_addChild</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_addChild</span><span class="p">(</span><span class="nx">n</span><span class="p">)},</span><span class="nx">getAllChildMarkers</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="o">||</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getAllChildMarkers</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_markers</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">getChildCount</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">},</span><span class="nx">zoomToBounds</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">fitBounds</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">)},</span><span class="nx">getBounds</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLngBounds</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">),</span><span class="nx">t</span><span class="p">},</span><span class="nx">_updateIcon</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_iconNeedsUpdate</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_icon</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setIcon</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">createIcon</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_iconNeedsUpdate</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_iconObj</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">iconCreateFunction</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_iconNeedsUpdate</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_iconObj</span><span class="p">.</span><span class="nx">createIcon</span><span class="p">()},</span><span class="nx">createShadow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_iconObj</span><span class="p">.</span><span class="nx">createShadow</span><span class="p">()},</span><span class="nx">_addChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_iconNeedsUpdate</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_expandBounds</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">__parent</span><span class="o">=</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="o">+=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_markers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="o">++</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">__parent</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">__parent</span><span class="p">.</span><span class="nx">_addChild</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">_expandBounds</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">;</span><span class="nx">t</span> <span class="k">instanceof</span> <span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_cLatLng</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cLatLng</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_cLatLng</span><span class="o">||</span><span class="nx">i</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="o">+</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="p">.</span><span class="nx">lat</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">lat</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="p">.</span><span class="nx">lat</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">)</span><span class="o">/</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="p">.</span><span class="nx">lng</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">lng</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="p">.</span><span class="nx">lng</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">)</span><span class="o">/</span><span class="nx">n</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_latlng</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">lat</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">lng</span><span class="p">)},</span><span class="nx">_addToMap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">t</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">_recursivelyAnimateChildrenIn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_markers</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">_icon</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">_setPos</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">))},</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">_icon</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">_setPos</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">))})},</span><span class="nx">_recursivelyAnimateChildrenInAndAddSelfToMap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">_recursivelyAnimateChildrenIn</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">latLngToLayerPoint</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">()).</span><span class="nx">round</span><span class="p">(),</span><span class="nx">e</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_isSingleParent</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">i</span><span class="o">?</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_addToMap</span><span class="p">()})},</span><span class="nx">_recursivelyBecomeVisible</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">)})},</span><span class="nx">_recursivelyAddChildrenToMap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!==</span><span class="nx">n</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">_markers</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="nx">i</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">r</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">r</span><span class="p">))}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">_addToMap</span><span class="p">(</span><span class="nx">t</span><span class="p">)})},</span><span class="nx">_recursivelyRestoreChildPositions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_markers</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">i</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="p">),</span><span class="k">delete</span> <span class="nx">i</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">_restorePosition</span><span class="p">();</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="o">--</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">[</span><span class="nx">s</span><span class="p">].</span><span class="nx">_recursivelyRestoreChildPositions</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">_restorePosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_backupLatlng</span><span class="p">)},</span><span class="nx">_recursivelyRemoveChildrenFromMap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_markers</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="o">--</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_markers</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">))},</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="o">--</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">))})},</span><span class="nx">_recursively</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">--</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">t</span><span class="p">.</span><span class="nx">intersects</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_zoom</span><span class="o">===</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">--</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">t</span><span class="p">.</span><span class="nx">intersects</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">_bounds</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">_recursively</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">)},</span><span class="nx">_recalculateBounds</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_markers</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_bounds</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">LatLngBounds</span><span class="p">,</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_wLatLng</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="o">--</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_expandBounds</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">t</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="o">--</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_expandBounds</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">t</span><span class="p">])},</span><span class="nx">_isSingleParent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_childClusters</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">_childCount</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">_childCount</span><span class="p">}}),</span><span class="nx">L</span><span class="p">.</span><span class="nx">DistanceGrid</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cellSize</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_sqCellSize</span><span class="o">=</span><span class="nx">t</span><span class="o">*</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_grid</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">_objectPoint</span><span class="o">=</span><span class="p">{}},</span><span class="nx">L</span><span class="p">.</span><span class="nx">DistanceGrid</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">addObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCoord</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCoord</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_grid</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">a</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Util</span><span class="p">.</span><span class="nx">stamp</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_objectPoint</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">updateObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">removeObject</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">addObject</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">removeObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCoord</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCoord</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_grid</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_objectPoint</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">Util</span><span class="p">.</span><span class="nx">stamp</span><span class="p">(</span><span class="nx">t</span><span class="p">)],</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="mi">1</span><span class="o">===</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">eachObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_grid</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">_</span><span class="p">){</span><span class="nx">o</span><span class="o">=</span><span class="nx">_</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">o</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">s</span><span class="p">]),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">--</span><span class="p">,</span><span class="nx">r</span><span class="o">--</span><span class="p">)}},</span><span class="nx">getNearObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">_</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCoord</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCoord</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_objectPoint</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_sqCellSize</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">u</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">u</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_grid</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">_</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">_</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_sqDist</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">Util</span><span class="p">.</span><span class="nx">stamp</span><span class="p">(</span><span class="nx">a</span><span class="p">)],</span><span class="nx">t</span><span class="p">),</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">p</span><span class="p">},</span><span class="nx">_getCoord</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">t</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">_cellSize</span><span class="p">)},</span><span class="nx">_sqDist</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="k">return</span> <span class="nx">i</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nx">n</span><span class="p">}},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">L</span><span class="p">.</span><span class="nx">QuickHull</span><span class="o">=</span><span class="p">{</span><span class="nx">getDistant</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">lat</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">lat</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">lng</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">lng</span><span class="p">;</span><span class="k">return</span> <span class="nx">n</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lat</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">lat</span><span class="p">)</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lng</span><span class="o">-</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">lng</span><span class="p">)},</span><span class="nx">findMostDistantPointFromBaseLine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDistant</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">s</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">));</span><span class="k">return</span><span class="p">{</span><span class="nx">maxPoint</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">newPoints</span><span class="o">:</span><span class="nx">a</span><span class="p">}},</span><span class="nx">buildConvexHull</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">findMostDistantPointFromBaseLine</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">maxPoint</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buildConvexHull</span><span class="p">([</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">maxPoint</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">newPoints</span><span class="p">)),</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buildConvexHull</span><span class="p">([</span><span class="nx">n</span><span class="p">.</span><span class="nx">maxPoint</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">n</span><span class="p">.</span><span class="nx">newPoints</span><span class="p">)))</span><span class="o">:</span><span class="p">[</span><span class="nx">t</span><span class="p">]},</span><span class="nx">getConvexHull</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">e</span><span class="p">];(</span><span class="nx">i</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">lat</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">lat</span><span class="p">),(</span><span class="nx">n</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">lat</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">lat</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[].</span><span class="nx">concat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buildConvexHull</span><span class="p">([</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">],</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">buildConvexHull</span><span class="p">([</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="p">],</span><span class="nx">t</span><span class="p">));</span><span class="k">return</span> <span class="nx">a</span><span class="p">}}}(),</span><span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="p">.</span><span class="nx">include</span><span class="p">({</span><span class="nx">getConvexHull</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAllChildMarkers</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">getLatLng</span><span class="p">(),</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">QuickHull</span><span class="p">.</span><span class="nx">getConvexHull</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span> <span class="nx">r</span><span class="p">}}),</span><span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="p">.</span><span class="nx">include</span><span class="p">({</span><span class="nx">_2PI</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">_circleFootSeparation</span><span class="o">:</span><span class="mi">25</span><span class="p">,</span><span class="nx">_circleStartAngle</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">6</span><span class="p">,</span><span class="nx">_spiralFootSeparation</span><span class="o">:</span><span class="mi">28</span><span class="p">,</span><span class="nx">_spiralLengthStart</span><span class="o">:</span><span class="mi">11</span><span class="p">,</span><span class="nx">_spiralLengthFactor</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">_circleSpiralSwitchover</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">spiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="o">!==</span><span class="k">this</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAllChildMarkers</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">latLngToLayerPoint</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">_circleSpiralSwitchover</span><span class="o">?</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_generatePointsSpiral</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="o">+=</span><span class="mi">10</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_generatePointsCircle</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">s</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationSpiderfy</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)}},</span><span class="nx">unspiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_inZoomAnimation</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_animationUnspiderfy</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">_generatePointsCircle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">spiderfyDistanceMultiplier</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_circleFootSeparation</span><span class="o">*</span><span class="p">(</span><span class="mi">2</span><span class="o">+</span><span class="nx">t</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">_2PI</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_2PI</span><span class="o">/</span><span class="nx">t</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_circleStartAngle</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">Point</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">r</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">r</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">n</span><span class="p">)).</span><span class="nx">_round</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">_generatePointsSpiral</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">spiderfyDistanceMultiplier</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiralLengthStart</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">spiderfyDistanceMultiplier</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiralFootSeparation</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">spiderfyDistanceMultiplier</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiralLengthFactor</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">o</span><span class="o">+=</span><span class="nx">s</span><span class="o">/</span><span class="nx">n</span><span class="o">+</span><span class="mi">5</span><span class="nx">e</span><span class="o">-</span><span class="mi">4</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">Point</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">o</span><span class="p">)).</span><span class="nx">_round</span><span class="p">(),</span><span class="nx">n</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">_2PI</span><span class="o">*</span><span class="nx">r</span><span class="o">/</span><span class="nx">o</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">_noanimationUnspiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAllChildMarkers</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="p">),</span><span class="k">delete</span> <span class="nx">t</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">setZIndexOffset</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">setZIndexOffset</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">),</span><span class="k">delete</span> <span class="nx">t</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">)}}),</span><span class="nx">L</span><span class="p">.</span><span class="nx">MarkerCluster</span><span class="p">.</span><span class="nx">include</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">DomUtil</span><span class="p">.</span><span class="nx">TRANSITION</span><span class="o">?</span><span class="p">{</span><span class="nx">SVG_ANIMATION</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">,</span><span class="s2">&quot;animate&quot;</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;SVGAnimate&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">}(),</span><span class="nx">_animationSpiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">,</span><span class="nx">_</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">latLngToLayerPoint</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">setZIndexOffset</span><span class="p">(</span><span class="mi">1</span><span class="nx">e6</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">u</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">_setPos</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="o">:</span><span class="nx">u</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">_forceLayout</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">_animationStart</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Path</span><span class="p">.</span><span class="nx">SVG</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">.</span><span class="mi">3</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Path</span><span class="p">.</span><span class="nx">SVG_NS</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">_</span><span class="p">.</span><span class="nx">layerPointToLatLng</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">n</span><span class="p">]),</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">Polyline</span><span class="p">([</span><span class="nx">a</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">,</span><span class="nx">o</span><span class="p">],{</span><span class="nx">weight</span><span class="o">:</span><span class="mf">1.5</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#222&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="nx">_</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">Path</span><span class="p">.</span><span class="nx">SVG</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">SVG_ANIMATION</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">getTotalLength</span><span class="p">();</span><span class="nx">r</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;stroke-dasharray&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;animate&quot;</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;attributeName&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-dashoffset&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;begin&quot;</span><span class="p">,</span><span class="s2">&quot;indefinite&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;from&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;to&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;dur&quot;</span><span class="p">,.</span><span class="mi">25</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">beginElement</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;animate&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;attributeName&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-opacity&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;attributeName&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-opacity&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;begin&quot;</span><span class="p">,</span><span class="s2">&quot;indefinite&quot;</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;from&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;to&quot;</span><span class="p">,.</span><span class="mi">5</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;dur&quot;</span><span class="p">,.</span><span class="mi">25</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">beginElement</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(.</span><span class="mi">3</span><span class="p">),</span><span class="nx">L</span><span class="p">.</span><span class="nx">Path</span><span class="p">.</span><span class="nx">SVG</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">.</span><span class="nx">_forceLayout</span><span class="p">(),</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">--</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">_spiderLeg</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;stroke-opacity&quot;</span><span class="p">,.</span><span class="mi">5</span><span class="p">);</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">_animationEnd</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;spiderfied&quot;</span><span class="p">)},</span><span class="mi">200</span><span class="p">)},</span><span class="nx">_animationUnspiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">_latLngToNewLayerPoint</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">zoom</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">center</span><span class="p">)</span><span class="o">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">latLngToLayerPoint</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAllChildMarkers</span><span class="p">(),</span><span class="nx">_</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">Path</span><span class="p">.</span><span class="nx">SVG</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">SVG_ANIMATION</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">_animationStart</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="p">),</span><span class="k">delete</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_setPos</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">_</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;to&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;from&quot;</span><span class="p">)),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;from&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">beginElement</span><span class="p">(),</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;from&quot;</span><span class="p">,.</span><span class="mi">5</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;to&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;stroke-opacity&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">beginElement</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">.</span><span class="nx">_path</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;stroke-opacity&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">)));</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">++</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setOpacity</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setZIndexOffset</span><span class="p">(</span><span class="mi">0</span><span class="p">)),</span><span class="nx">t</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">),</span><span class="k">delete</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">);</span><span class="nx">s</span><span class="p">.</span><span class="nx">_animationEnd</span><span class="p">()},</span><span class="mi">200</span><span class="p">)}}</span><span class="o">:</span><span class="p">{</span><span class="nx">_animationSpiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_group</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">_map</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">)</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">layerPointToLatLng</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]),</span><span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">_preSpiderfyLatlng</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">setLatLng</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">setZIndexOffset</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">setZIndexOffset</span><span class="p">(</span><span class="mi">1</span><span class="nx">e6</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="k">new</span> <span class="nx">L</span><span class="p">.</span><span class="nx">Polyline</span><span class="p">([</span><span class="k">this</span><span class="p">.</span><span class="nx">_latlng</span><span class="p">,</span><span class="nx">r</span><span class="p">],{</span><span class="nx">weight</span><span class="o">:</span><span class="mf">1.5</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#222&quot;</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">addLayer</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(.</span><span class="mi">3</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="s2">&quot;spiderfied&quot;</span><span class="p">)},</span><span class="nx">_animationUnspiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_noanimationUnspiderfy</span><span class="p">()}}),</span><span class="nx">L</span><span class="p">.</span><span class="nx">MarkerClusterGroup</span><span class="p">.</span><span class="nx">include</span><span class="p">({</span><span class="nx">_spiderfied</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_spiderfierOnAdd</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyWrapper</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">zoomAnimation</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;zoomstart&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyZoomStart</span><span class="p">,</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;zoomend&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyWrapper</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">L</span><span class="p">.</span><span class="nx">Path</span><span class="p">.</span><span class="nx">SVG</span><span class="o">&amp;&amp;!</span><span class="nx">L</span><span class="p">.</span><span class="nx">Browser</span><span class="p">.</span><span class="nx">touch</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_initPathRoot</span><span class="p">()},</span><span class="nx">_spiderfierOnRemove</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyWrapper</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;zoomstart&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyZoomStart</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;zoomanim&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyZoomAnim</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="p">()},</span><span class="nx">_unspiderfyZoomStart</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;zoomanim&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyZoomAnim</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">_unspiderfyZoomAnim</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">DomUtil</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">_mapPane</span><span class="p">,</span><span class="s2">&quot;leaflet-touching&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="s2">&quot;zoomanim&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfyZoomAnim</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="p">(</span><span class="nx">t</span><span class="p">))},</span><span class="nx">_unspiderfyWrapper</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_unspiderfy</span><span class="p">()},</span><span class="nx">_unspiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="p">.</span><span class="nx">unspiderfy</span><span class="p">(</span><span class="nx">t</span><span class="p">)},</span><span class="nx">_noanimationUnspiderfy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_spiderfied</span><span class="p">.</span><span class="nx">_noanimationUnspiderfy</span><span class="p">()},</span><span class="nx">_unspiderfyLayer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_featureGroup</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">setOpacity</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">setZIndexOffset</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_map</span><span class="p">.</span><span class="nx">removeLayer</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">),</span><span class="k">delete</span> <span class="nx">t</span><span class="p">.</span><span class="nx">_spiderLeg</span><span class="p">)}})}(</span><span class="nb">window</span><span class="p">,</span><span class="nb">document</span><span class="p">);</span></div></pre></div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.04894s from fe17.rs.github.com">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/Leaflet/Leaflet.markercluster/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

    
  </body>
</html>

